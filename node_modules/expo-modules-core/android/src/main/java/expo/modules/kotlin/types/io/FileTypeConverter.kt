package expo.modules.kotlin.types.io

import com.facebook.react.bridge.Dynamic
import expo.modules.kotlin.AppContext
<<<<<<< HEAD
import expo.modules.kotlin.exception.Exceptions
=======
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
import expo.modules.kotlin.jni.CppType
import expo.modules.kotlin.jni.ExpectedType
import expo.modules.kotlin.types.DynamicAwareTypeConverters
import java.io.File

<<<<<<< HEAD
class FileTypeConverter : DynamicAwareTypeConverters<File>() {
  override fun convertFromDynamic(value: Dynamic, context: AppContext?, forceConversion: Boolean): File {
    val path = value.asString()
      ?: throw Exceptions.IllegalArgument("Cannot convert ${value.type} to File")
    return File(path)
  }

  override fun convertFromAny(value: Any, context: AppContext?, forceConversion: Boolean): File {
=======
class FileTypeConverter(isOptional: Boolean) : DynamicAwareTypeConverters<File>(isOptional) {
  override fun convertFromDynamic(value: Dynamic, context: AppContext?): File {
    val path = value.asString()
    return File(path)
  }

  override fun convertFromAny(value: Any, context: AppContext?): File {
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
    val path = value as String
    return File(path)
  }

  override fun getCppRequiredTypes(): ExpectedType = ExpectedType(CppType.STRING)

  override fun isTrivial() = false
}
