<<<<<<< HEAD
import { AutolinkingOptions } from '../commands/autolinkingOptions';
import { getLinkingImplementationForPlatform } from '../platforms';
import type { SupportedPlatform } from '../types';

interface GetConfigurationParams {
  autolinkingOptions: AutolinkingOptions & { platform: SupportedPlatform };
}

export function getConfiguration({
  autolinkingOptions,
}: GetConfigurationParams): Record<string, any> | undefined {
  const platformLinking = getLinkingImplementationForPlatform(autolinkingOptions.platform);
  if ('getConfiguration' in platformLinking) {
    return platformLinking.getConfiguration(autolinkingOptions);
  } else {
    return undefined;
  }
=======
import type { ResolveOptions } from '../types';
import { getLinkingImplementationForPlatform } from './utils';

export function getConfiguration(options: ResolveOptions) {
  const platformLinking = getLinkingImplementationForPlatform(options.platform);
  return platformLinking.getConfiguration?.(options);
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
}
