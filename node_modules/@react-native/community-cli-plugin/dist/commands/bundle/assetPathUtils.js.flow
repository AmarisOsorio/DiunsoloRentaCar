/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow strict-local
 * @format
<<<<<<< HEAD
=======
 * @oncall react_native
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
 */

export type PackagerAsset = $ReadOnly<{
  httpServerLocation: string,
  name: string,
  type: string,
  ...
}>;

/**
 * FIXME: using number to represent discrete scale numbers is fragile in essence because of
 * floating point numbers imprecision.
 */
declare function getAndroidAssetSuffix(scale: number): string;

<<<<<<< HEAD
// See https://developer.android.com/guide/topics/resources/drawable-resource.html
declare const drawableFileTypes: Set<string>;

=======
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
declare function getAndroidResourceFolderName(
  asset: PackagerAsset,
  scale: number
): string;

declare function getResourceIdentifier(asset: PackagerAsset): string;

declare function getBasePath(asset: PackagerAsset): string;

declare export default {
<<<<<<< HEAD
  drawableFileTypes: typeof drawableFileTypes,
  getAndroidAssetSuffix: typeof getAndroidAssetSuffix,
  getAndroidResourceFolderName: typeof getAndroidResourceFolderName,
  getResourceIdentifier: typeof getResourceIdentifier,
  getBasePath: typeof getBasePath,
=======
  getAndroidAssetSuffix: getAndroidAssetSuffix,
  getAndroidResourceFolderName: getAndroidResourceFolderName,
  getResourceIdentifier: getResourceIdentifier,
  getBasePath: getBasePath,
>>>>>>> 2c830f7d0232ead70791aff6968a0e95ce850767
};
